# The json and python script combination helps pentesters by taking their command output, then summarize and stores
# notes for them. As well as, provides insight and recommendations for the pentester

# This is a python script to start the http webhook in n8n that sends the command 
# output file to the ai agent to the summary

#example is python3 call_to_n8n.py -f <output


import argparse
import requests
import json
import os
import sys

# === PARSE ARGUMENTS ===
parser = argparse.ArgumentParser(
    description="ðŸ“¤ Send a file's contents (e.g. Gobuster output) to an n8n webhook endpoint.",
    epilog="Example: python3 send_to_n8n.py -f gobuster_output.txt -u http://localhost:5678/webhook/gobuster",
)

parser.add_argument(
    "-f", "--file",
    required=True,
    help="Path to the local output file (e.g. gobuster_output.txt)"
)

parser.add_argument(
    "-u", "--url",
    required=True,
    help="Full n8n webhook URL (e.g. http://localhost:5678/webhook/gobuster)"
)

args = parser.parse_args()

file_path = args.file
webhook_url = args.url

# === VALIDATE FILE ===
if not os.path.isfile(file_path):
    print(f"[!] File not found: {file_path}")
    sys.exit(1)

# === READ FILE CONTENTS ===
with open(file_path, "r") as f:
    output = f.read()

# === PREPARE PAYLOAD ===
payload = {
    "output": output,
    "filename": os.path.basename(file_path)
}

# === SEND TO N8N ===
try:
    response = requests.post(
        webhook_url,
        headers={"Content-Type": "application/json"},
        data=json.dumps(payload)
    )

    if response.status_code == 200:
        print("[+] Data successfully sent to n8n.")
    else:
        print(f"[!] Failed to send data. Status Code: {response.status_code}")
        print(response.text)

except requests.exceptions.RequestException as e:
    print(f"[!] Request error: {e}")
